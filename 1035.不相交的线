//动态规划

//不相交的线 = 两数组，保持相对顺序不变

class Solution {

public:

    int maxUncrossedLines(vector<int>& nums1, vector<int>& nums2) {

        //不相交的线 ~ 最长哄哄我子序列

        

        //定义＋初始化

        vector<vector<int>> dp(nums1.size() + 1,

                    vector<int>(nums2.size() + 1, 0));

        

        //递推

        for(int i = 1; i <= nums1.size(); i++) {

            for(int j = 1; j <=nums2.size(); j++) {

                //相等

                if(nums1[i-1] == nums2[j-1]) {

                    dp[i][j] = dp[i-1][j-1] + 1;

                }

                //不想等

                else {

                    dp[i][j] = max(dp[i][j-1], 

                                   dp[i-1][j]);

                }

            

            }

        }

        

        return dp[nums1.size()][nums2.size()];

    }

};
