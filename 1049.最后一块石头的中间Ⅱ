//动态规划

class Solution {

public:

    int lastStoneWeightII(vector<int>& stones) {

        //求和

        int sum = 0;

        for(int i = 0; i < stones.size(); i++) {

            sum += stones[i];

        }

        

        int target = sum / 2;

        

        //定义

        vector<int> dp(target + 1, 0);

        //vector<int> dp(15001, 0);

        

        //0－1背包

        //遍历物品

        for(int i = 0; i < stones.size(); i++) {

            //遍历背包

            for(int j = target; j >= stones[i]; j--) {

                dp[j] = max(dp[j], 

                          dp[j-stones[i]] + stones[i]);

            }

        }

        

        //return dp[target] - (sum - dp[target]);

        return sum - dp[target] -dp[target];

    }

};
