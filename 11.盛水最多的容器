/*

//暴力算法－超出时间限制

class Solution {

public:

    int maxArea(vector<int>& height) {

        if(height.size() < 2) return 0;

        

        int maxWater = 0, water = 0;

        

        for(int i = 0; i < height.size()-1; i++) {

            for(int j = i+1; j < height.size(); j++) {

                //计算

                water = min(height[j], height[i]) * 

                                                (j-i);

                //更新

                maxWater = max(maxWater, water);

            }

        }

        

        return maxWater;

    }

};

*/

//双指针左右收缩

class Solution {

public:

    int maxArea(vector<int>& height) {

        int i = 0;

        int j = height.size() - 1;

        

        int water = 0, maxWater = 0;

        

        while(i < j) {

            water = min(height[i], height[j]) * (j-i);

            

            maxWater = max(maxWater, water);

            

            if(height[i] < height[j]) {

                i++;

            }

            else { //height[i] > height[j]

                j--;

            }

        }

        

        return maxWater;

    }

};
