/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head==NULL) return;
        vector<ListNode*>vec;
        while(head!=NULL)
        {
            vec.push_back(head);
            head=head->next;
        }
        int i=0;
        int j=vec.size()-1;
        while(i<j)
        {
            vec[i]->next=vec[j];      //偶数个时，这必须进行一次
            i++;                      //偶数个时，这必须进行一次
            if(i==j) break;                //此时，退出循环
            vec[j]->next=vec[i];
            j--;
        }
        vec[j]->next=NULL;
    }
};
