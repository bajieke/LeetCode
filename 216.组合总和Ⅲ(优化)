class Solution {

private:

    vector<vector<int>> result;

    vector<int> path;

    

    void backTracking(int targetSum,int sum,int k,

                                    int startIndex) {

        //剪枝操作

        if(sum > targetSum)

            return;

        

        //退出条件

        if(path.size() == k) {

            if(sum == targetSum) 

                result.push_back(path);

            return;

        }

        

        for(int i=startIndex; i<=(9-(k-path.size())+1);

                                                 i++) {

            path.push_back(i);

            sum += i;

            

            backTracking(targetSum,sum,k,i+1);

            

            sum -= i;

            path.pop_back();

        }

        return;

    }

    

public:

    vector<vector<int>> combinationSum3(int k, int n) {

        path.clear();

        result.clear();

        

        

        backTracking(n,0,k,1);

        return result;

    }

};

