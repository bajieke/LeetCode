//动态规划

class Solution {

public:

    int maxCoins(vector<int>& nums) {

        int n = nums.size();

        

        vector<vector<int>> dp(n + 2, vector<int>

                                          (n + 2, 0));

        

        vector<int> arr(n + 2, 1);

        

        for(int i = 1; i < n+1; i++) {

            arr[i] = nums[i-1];

        }

        

        // j 向右扩大范围

        for(int j = 2; j <= n+1; j++) {

            // i 向左扩大范围

            for(int i = j-2; i >=0; i--) {

                // 中间值－抽取k

                for(int k = i+1; k < j; k++) {

                    //

                    dp[i][j] = max(dp[i][j],

                    

                             arr[i]*arr[k]*arr[j] +

                             dp[i][k] + 

                             dp[k][j]);

                }

            }

        }

        

        return dp[0][n+1];

    }

};

