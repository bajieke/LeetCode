//完全背包

class Solution {

public:

    int combinationSum4(vector<int>& nums, int target) {

        //定义

        vector<int> dp(target + 1, 0);

        

        //初始化

        dp[0] = 1;

        

        

        //完全背包

        

        //－先遍历背包容量

        for(int j = 0; j <= target; j++) {

            //－再遍历物品

            for(int i = 0; i < nums.size(); i++) {

                if(j >= nums[i] && 

                       dp[j] < INT_MAX-dp[j-nums[i]]) {

                    dp[j] += dp[j - nums[i]];

                }

            }

        }

        

        return dp[target];

    }

};

/*

class Solution {

public:

    int combinationSum4(vector<int>& nums, int target) {

        vector<int> dp(target + 1, 0);

        dp[0] = 1;

        for (int i = 0; i <= target; i++) { // 遍历背包

            for (int j = 0; j < nums.size(); j++) { // 遍历物品

                if (i - nums[j] >= 0 && dp[i] < INT_MAX - dp[i - nums[j]]) {

                    dp[i] += dp[i - nums[j]];

                }

            }

    }

        return dp[target];

    }

};

*/
