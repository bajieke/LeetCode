//右边界排序－end

class Solution {

private:

    static bool cmp(const vector<int>& a, 

                    const vector<int>& b) {

        //按照－右边界排序

        return a[1] < b[1];

    }

public:

    int eraseOverlapIntervals(vector<vector<int>>& 

                                        intervals) {

        if(intervals.size() == 0) return 0;

        if(intervals.size() == 1) return 0;

        

        //排序－按照右边界

        sort(intervals.begin(), intervals.end(), cmp);

        

        //定义一团最小右边界end

        int end = intervals[0][1];

        

        //团的个数

        int count = 0;

        

        for(int i=0; i<intervals.size(); i++) {

            //下一团的开始

            if(end <= intervals[i][0]) {

                count++;

                end = intervals[i][1];

            }

        }

        

        count++;

        

        return intervals.size()-count;

    }

};

