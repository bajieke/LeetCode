//0-1背包

class Solution {

public:

    int findTargetSumWays(vector<int>& nums, int target) {

        

        int sum = 0;

        

        for(int i = 0; i < nums.size(); i++) {

            sum += nums[i];

        }

        

        //特殊例外

        if(abs(target) > sum) return 0;

        

        //特殊例外

        if((target+sum) % 2 == 1) return 0;

        

        //背包容量

        int bagSize = (target + sum) / 2;

        

        //定义

        vector<int> dp(bagSize + 1, 0);

        

        //初始化

        dp[0] = 1;

        

        //0-1背包

        for(int i = 0; i < nums.size(); i++) {

            for(int j = bagSize; j >= nums[i]; j--) {

                dp[j] += dp[j - nums[i]];

            }

        }

        

        return dp[bagSize];

    }

};
