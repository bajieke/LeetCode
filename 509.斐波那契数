/*

class Solution {

public:

    int fib(int n) {

        //特殊情况

        if(n == 0) return 0;

        if(n == 1) return 1;

        

        vector<int> dp(n+1);

        

        //初始化dp数组

        dp[0] = 0;

        dp[1] = 1;

        

        //从前向后

        for(int i = 2; i <= n; i++) {

            dp[i] = dp[i-1] + dp[i-2];

        }

        

        return dp[n];

    }

};

*/

/*

class Solution {

public:

    int fib(int n) {

        if(n == 0) return 0;

        if(n == 1) return 1;

        

        int dp[2] = {0,1};

        

        int sum = 0;

        

        for(int i = 2; i <= n; i++) {

            sum = dp[0] + dp[1];

            

            dp[0] = dp[1];

            dp[1] = sum;

        }

        

        return sum;

    }

};

*/

//递归法

class Solution {

public:

    int fib(int n) {

        //退出条件

        if(n == 0) return 0;

        if(n == 1) return 1;

        

        //递归

        return fib(n-1) + fib(n-2);

    }

};
