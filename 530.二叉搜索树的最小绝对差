//迭代法
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//中序遍历，迭代法
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        stack<TreeNode*> stk;
        TreeNode* node = root;
        TreeNode* pre = nullptr;
        
        if(root == nullptr) return 0;
        
        int result = INT_MAX;
        
        while(node!=nullptr || !stk.empty()) {
            if(node != nullptr) {
                stk.push(node);
                node = node->left;
            }
            else {
                node = stk.top();
                stk.pop();
                if(pre!=nullptr)
                    result = min(result,
                               (node->val - pre->val));
                pre = node;
            
                node = node->right;
            }
        }
        return result;
    }
};
    
