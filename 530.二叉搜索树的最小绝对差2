//递归法
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//中序遍历，与验证二叉树相似
class Solution {
private:
    TreeNode* pre = nullptr;
    int result = INT_MAX;
    
    void traversal(TreeNode* root) {
        //退出条件
        if(root == nullptr)
            return;
    
        traversal(root->left);
        
        if(pre != nullptr) {
            result = min(result,
                            (root->val - pre->val));
        }
        pre = root;
        
        traversal(root->right);
    }
    
public:
    int getMinimumDifference(TreeNode* root) {
        if(root==nullptr) return 0;
        traversal(root);
        return result;
    }
};
    
