
//迭代法
class Solution {
private:
    int pre;
    
    //逆 中序遍历
    void traversal(TreeNode* root) {
        stack<TreeNode*> stk;
        TreeNode* cur = root;
        
        while(cur!=nullptr || !stk.empty()) {
            if(cur != nullptr) {
                stk.push(cur);
                //右
                cur = cur->right;
            }
            else {
                //中
                cur = stk.top();
                stk.pop();
                
                cur->val += pre;
                pre = cur->val;
                
                //左
                cur = cur->left;
            }
        }
    }
    
public:
    TreeNode* convertBST(TreeNode* root) {
        if(root == nullptr) return nullptr;
        
        pre = 0;
        traversal(root);
        return root;
    }
};

        
