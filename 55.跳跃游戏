//贪心算法

class Solution {

public:

    bool canJump(vector<int>& nums) {

        if(nums.size() <= 1) return true;

    

        int newCover = 0;

        int cover = 0;

        

        //for(int i=0; i<nums.size()-1; i++) {

        //只能在前一个范围内，进行判断 (然后才扩展范围))

        for(int i=0; i<=cover; i++) {

            newCover = i + nums[i];

            

            //局部贪心

            if(newCover > cover) cover = newCover;

            

            if(cover >= (nums.size()-1)) return true;

        }

        

        return false;

    }

};
