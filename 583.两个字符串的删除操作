//动态规划

class Solution {

public:

    int minDistance(string word1, string word2) {

        //定义

        vector<vector<int>> dp(word1.size() + 1,

                      vector<int> (word2.size() + 1));

        

        //初始化

        for(int i = 0; i <= word1.size(); i++) {

            //当t为空串，要使得s,t相等，所要删除的数目

            dp[i][0] = i;

        }

        

        //初始化2

        for(int j = 0; j <= word2.size(); j++) {

            //当s为空串，要使得s,t相等，所要删除的数目

            dp[0][j] = j;

        }

        

        //递推

        for(int i = 1; i <= word1.size(); i++) {

            for(int j = 1; j <= word2.size(); j++) {

                //相等

                if(word1[i-1] == word2[j-1]) {

                    dp[i][j] = dp[i-1][j-1];

                }

                //不相等

                else {  //删t的，删s的，两个都删

                    dp[i][j] = min({dp[i][j-1] + 1,

                                   dp[i-1][j] + 1,

                                   dp[i-1][j-1] + 2});

                }

            }

    
