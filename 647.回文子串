/*

//动态规划

class Solution {

public:

    int countSubstrings(string s) {

        //定义＋初始化

        vector<vector<bool>> dp(s.size(),

                       vector<bool>(s.size(), false));

        

        int result = 0;

        

        //递推

        //从下到上，从左到右  [i,j]范围内的子串

        for(int i = s.size() - 1; i >= 0; i--) {

            for(int j = i; j < s.size(); j++) {

                //相等

                if(s[i] == s[j]) {

                    if((j-i) <= 1) {

                        result++;

                        dp[i][j] = true;

                    }

                    else if(dp[i+1][j-1]) {

                        result++;

                        dp[i][j] = true;

                    }

                }

                //不相等

                else {

                    dp[i][j] = false;

                }

            }

        }

        

        return result;

    }

};

*/

