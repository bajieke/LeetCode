/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode *root)
    {
        vector<int>res;
        stack<TreeNode *>stk;
        while(!stk.empty() || root)
        {
            if(root){
            stk.push(root);
            root=root->left;
            }
            else{
                root=stk.top();
                stk.pop();
                res.push_back(root->val);
                root=root->right;
            }
        }
        return res;
    }
};


//思路---------------迭代（非递归）
/*
循环（栈不为空 || 结点存在（上一个结点的右孩子））
{
  存在 { 入栈
         指向左孩子
        }
  不存在{ 弹出栈顶元素，进容器
          栈顶元素指向右孩子
        }
}
*/

