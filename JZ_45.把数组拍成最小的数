//对字符串们－进行快排  

class Solution {

private:

    void quickSort(vector<string>& s, int left, 

                                     int right) {

        if(left >= right) return;

        

        int i = left, j = right;

        

        while(i < j) {

            // 右边  － 比它大

            while(s[j]+s[left] >= s[left]+s[j] && 

                                        i < j) {

                j--;

            }

            // 左边 － 比它小

            while(s[i]+s[left] <= s[left]+s[i] &&

                                         i < j) {

                i++;

            }

            // 交换

            swap(s[i], s[j]);

        }

        

        //交换

        swap(s[i], s[left]);

        

        //递归

        quickSort(s, left, i-1);

        quickSort(s, i+1, right);

    }

public:

    string minNumber(vector<int>& nums) {

        vector<string> sortStr;

    

        for(int i = 0; i < nums.size(); i++) {

           sortStr.push_back(to_string(nums[i]));

        } 

        

        quickSort(sortStr, 0, sortStr.size() - 1);

        

        string result;

        for(auto str : sortStr) {

            result.append(str);

        }

        

        return result;

    }

};
