/**

 * Definition for a binary tree node.

 * struct TreeNode {

 *     int val;

 *     TreeNode *left;

 *     TreeNode *right;

 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}

 * };

 */

/*

class Solution {

public:

    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        

    }

};

*/

/*

//递归

class Solution {

public:

    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        //特殊情况

        if(root == nullptr) return nullptr;

        

        if(root->val > p->val && root->val > q->val) {

            //往左

            root = lowestCommonAncestor(root->left, 

                                            p, q);

        }

        else if(root->val < p->val && root->val < 

                                             q->val) {

            //往右

            root = lowestCommonAncestor(root->right, 

                                              p, q);

        }

        else {

            //找到

            return root;

        }

        

        return root;

    }

};

*/

//迭代法

class Solution {

public:

    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        //

        if(root == nullptr) return nullptr;

        

        while(root) {

            if(root->val > p->val && root->val > 

                                       q->val) {

                //往左

                root = root->left;

            }

            else if(root->val < p->val && root->val < 

                                            q->val) {

                //往右

                root = root->right;

            }

            else {

                //找到

                return root;

            }

        }

        

        //没找到

        return nullptr;

    }

};

  
