//递归

class Solution {

public:

    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        //递归退出条件

        if(root == p || root == q || root == nullptr) {

            return root;

        }

        

        //左

        TreeNode* left = lowestCommonAncestor(

                                     root->left, p, q);

        

        //右

        TreeNode* right = lowestCommonAncestor(

                                    root->right, p, q);

        

        //中

        if(left && right) {

            return root;

        }

        

        

        //特殊

        if(left && !right) {   //都在左子树

            return left;

        }

        else if(!left && right) {  //都在右子树

            return right;

        }

        else {

            return nullptr;   //左右子树都没有

        }

        

        return root;

    }

};

